
const SP              = 0 // We run 1000 push/pop events, so the stack will never grow to this point
const WAITING_FOR_POP = 1
const COUNT           = 2
const RAM             = 3

def get_input($scratch_space: [Int], tick: Int, $inputs: [Int]) {

    inputs[0] = random(2) == 0 ? 1 + random(0xfe) : 0

    if scratch_space[SP] == 0 {

        inputs[0] = 1 + random(0xfe)

    }

}

def check_output($scratch_space: [Int], tick: Int, inputs: [Int], outputs: [Int]) TestResult {

    {

        let input_enabled = outputs[0] == 1

        if input_enabled {

            let push = inputs[0] != 0

            if push {

                let sp = scratch_space[SP]
                scratch_space[RAM + sp] = inputs[0]
                scratch_space[SP] += 1


            } else { // Pop

                if scratch_space[WAITING_FOR_POP] == 1 {

                    set_error(`You did not output the last popped value.`)
                    return fail

                }

                scratch_space[WAITING_FOR_POP] = 1
                scratch_space[SP] -= 1

            }

        }

    }

    if outputs[2] & 1 != 1 { return pass }

    let sp = scratch_space[SP]

    if scratch_space[WAITING_FOR_POP] == 0 {

        set_error(`Only output when the input is 0`)
        return fail

    }

    if outputs[1] != scratch_space[RAM + sp] {

        set_error(`{scratch_space[RAM + sp]} is supposed to be on top of the stack, not {outputs[1]}.`)
        return fail

    }

    scratch_space[WAITING_FOR_POP] = 0
    scratch_space[COUNT] += 1

    if scratch_space[COUNT] >= 1000 {

        return win

    }

}