kind = sequential
immutable_program = true
immutable_spec = true
title = "Latency ram"
copy_solution_to_level = ["symphony_15_cache"]
size = [-256, -256, 255, 255]
unlocks_components = [com_ram_latency, com_config_delay]
add_components = [com_ram_latency: -1, com_config_delay: -1]
dialogue = [
  (info, `


  `)]
default_isa_spec = `

[settings]
name = "Symphony"

[fields]

register
zr 0000
r1 0001
r2 0010
r3 0011
r4 0100
r5 0101
r6 0110
r7 0111
r8 1000
r9 1001
r10 1010
r11 1011
r12 1100
r13 1101
sp 1110
flags 1111

[instructions]

or %a(register), %b(register), %c(register)
01000001 aaaabbbb 0000cccc 00000000
OR %b and %c and store the result in %a.

nand %a(register), %b(register), %c(register)
01000000 aaaabbbb 0000cccc 00000000
NAND %b and %c and store the result in %a.

nor %a(register), %b(register), %c(register)
01000011 aaaabbbb 0000cccc 00000000
NOR %b and %c and store the result in %a.

and %a(register), %b(register), %c(register)
01000010 aaaabbbb 0000cccc 00000000
AND %b and %c and store the result in %a.

add %a(register), %b(register), %c(register)
01000100 aaaabbbb 0000cccc 00000000
ADD %b and %c and store the result in %a.

sub %a(register), %b(register), %c(register)
01000101 aaaabbbb 0000cccc 00000000
SUB %b and %c and store the result in %a.

xor %a(register), %b(register), %c(register)
01000110 aaaabbbb 0000cccc 00000000
XOR %b and %c and store the result in %a.

lsl %a(register), %b(register), %c(register)
01000111 aaaabbbb 0000cccc 00000000
LSL %b and %c and store the result in %a.

lsr %a(register), %b(register), %c(register)
01001000 aaaabbbb 0000cccc 00000000
LSR %b and %c and store the result in %a.

cmp %a(register), %b(register)
01001001 0111aaaa 0000bbbb 00000000
Compares %a and %b and store the resulting flags in r6.


or %a(register), %b(register), %c(immediate)
01010001 aaaabbbb cccccccc cccccccc
OR %b and %c and store the result in %a.

nand %a(register), %b(register), %c(immediate)
01010000 aaaabbbb cccccccc cccccccc
NAND %b and %c and store the result in %a.

nor %a(register), %b(register), %c(immediate)
01010011 aaaabbbb cccccccc cccccccc
NOR %b and %c and store the result in %a.

and %a(register), %b(register), %c(immediate)
01010010 aaaabbbb cccccccc cccccccc
AND %b and %c and store the result in %a.

add %a(register), %b(register), %c(immediate)
01010100 aaaabbbb cccccccc cccccccc
ADD %b and %c and store the result in %a.

sub %a(register), %b(register), %c(immediate)
01010101 aaaabbbb cccccccc cccccccc
SUB %b and %c and store the result in %a.

xor %a(register), %b(register), %c(immediate)
01010110 aaaabbbb cccccccc cccccccc
XOR %b and %c and store the result in %a.

lsl %a(register), %b(register), %c(immediate)
01010111 aaaabbbb cccccccc cccccccc
LSL %b and %c and store the result in %a.

lsr %a(register), %b(register), %c(immediate)
01011000 aaaabbbb cccccccc cccccccc
LSR %b and %c and store the result in %a.

cmp %a(register), %b(immediate)
01011001 0111aaaa bbbbbbbb bbbbbbbb
Compares %a and %b and store the resulting flags in r6.


jmp %a(register)
10001000 00001111 0000aaaa 00000000
Jump to %a


jmp %a(immediate | label)
10011000 11111111 aaaaaaaa aaaaaaaa
Jump to %a

je %a(immediate | label)
10010001 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the values were equal (reading results from 'flags').

jne %a(immediate | label)
10011001 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the values were not equal (reading results from 'flags').


jb %a(immediate | label)
10010010 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was below (unsigned) the second (reading results from 'flags').

jae %a(immediate | label)
10011010 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was above (unsigned) or euqal to the second (reading results from 'flags').

jbe %a(immediate | label)
10010011 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the First value was below (unsigned) or equal to the second (reading results from 'flags').

ja %a(immediate | label)
10011011 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was above (unsigned) the second (reading results from 'flags').


jl %a(immediate | label)
10010100 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was less (signed) than the second (reading results from 'flags').

jge %a(immediate | label)
10011100 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was greater (signed) or equal to the second (reading results from 'flags').

jle %a(immediate | label)
10010101 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was less (signed) or equal to the second (reading results from 'flags').

jg %a(immediate | label)
10011101 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was greater (signed) than the second (reading results from 'flags').

in %a(register)
00000001 aaaa0000 00000000 00000000
Loads an input and stores it in %a

out %a(register)
00000010 00000000 0000aaaa 00000000
Sends %a to output

out %a(immediate)
00010010 00000000 aaaaaaaa aaaaaaaa
Sends %a to output

keyboard %a(register)
00001001 aaaa0000 00000000 00000000
Loads keyboard input and stores it to %a

console %a(register)
00000011 00000000 0000aaaa 00000000
Stores the value of %a in the console offset register

console %a(immediate)
00010011 00000000 0000aaaa 00000000
Stores the value of %a in the console offset register

time_0 %a(register)
00000100 aaaa0000 00000000 00000000
Loads the first two bytes of the time value and stores it to %a

time_1 %a(register)
00000101 aaaa0000 00000000 00000000
Loads the second two bytes of the time value and stores it to %a

time_2 %a(register)
00000110 aaaa0000 00000000 00000000
Loads the third two bytes of the time value and stores it to %a

time_3 %a(register)
00000111 aaaa0000 00000000 00000000
Loads the fourth two bytes of the time value and stores it to %a

counter %a(register)
00001000 aaaa0000 00000000 00000000
Loads the counter value and stores it to %a

load %dest(register), [%address(register)]
11000000 dddd0000 0000aaaa 00000000
Loads %address from RAM and stores it to %dest

store [%address(register)], %value(register)
11000001 0000bvvv 0000aaaa 00000000
Store %value to %address in RAM

load %dest(register), [%address(immediate)]
11010000 dddd0000 aaaaaaaa aaaaaaaa
Loads %address from RAM and stores it to %dest

store [%address(immediate)], %value(register)
11010001 0000vvvv aaaaaaaa aaaaaaaa
Store %value to %address in RAM



nop
00000000 00000000 00000000 00000000
Does nothing

nop
00000000 00000000 00000000 00000000
Does nothing

mov %a(register), %b(register)
01000001 0aaa0bbb 00000000 00000000
Move from %a to %b

neg %a(register), %b(register)
01000101 0aaa0000 00000bbb 00000000
Neg %b and store the result in %a.

not %a(register), %b(register)
01000011 0aaa0000 00000bbb 00000000
Not %b and store the result in %a.

mov %a(register), %b(immediate)
01010001 0aaa0000 bbbbbbbb bbbbbbbb
Move from %a to %b

neg %a(register), %b(immediate)
01010101 0aaa0000 bbbbbbbb bbbbbbbb
Neg %b and store the result in %a.

not %a(register), %b(immediate)
01010011 0aaa0000 bbbbbbbb bbbbbbbb
Not %b and store the result in %a.

push %a(register)
01010101 01100110 00000000 00000010   11000001 00000aaa 00000110 00000000
Pushes %a on to the stack. This instruction is a synonym for:   sub sp, sp, 2   store [sp], %a

pop %a(register)
11000000 0aaa0000 00000110 00000000   01010100 01100110 00000000 00000010
Pops %a off the stack. This instruction is a synonym for:   load %a, [sp]   add sp, sp, 2

call %a(label)
00001000 01110000 00000000 00000000   01010100 01110111 00000000 00010100   01010101 01100110 00000000 00000010   11000001 00000111 00000110 00000000   10011000 00000111 aaaaaaaa aaaaaaaa
Calls %a. Overwrites the flag register. This instruction is a synonym for:   counter flags   add flags, flags, 20   sub sp, sp, 2   store [sp], flags   jmp %a

ret
11000000 01110000 00000110 00000000   01010100 01100110 00000000 00000010   10001000 00000111 00000111 00000000
Returns from the last function call. Overwrites the flag register. This instruction is a synonym for:   load flags, [sp]   add sp, sp, 2   jmp flags

`
default_assembly = `
in r1
in r2
in r3
in r4
in r5
in sp
in flags
lsr r5, r5, 42940
or r2, r4, 57290
sub zr, r2, r4
and zr, r3, r5
in r2
in r2
cmp r2, r2
jmp label_5
or r4, sp, r3
in r5
in zr
in flags
cmp zr, flags
jle label_8
label_8:
load r5, [18]
out r3
label_5:
in r1
store [zr], sp
in r3
in r2
cmp r3, r2
jbe label_13
in zr
in sp
cmp zr, sp
je label_14
label_14:
nor r3, zr, zr
label_13:
in r3
nand r3, zr, 16860
in flags
in r5
cmp flags, r5
jmp label_18
lsl r5, r3, 60300
and sp, r2, r4
in r3
out r5
in r1
in r5
in r5
cmp r5, r5
jge label_24
label_24:
lsl zr, zr, 24864
in r2
in r1
cmp r2, r1
jl label_26
label_26:
in r5
label_18:
in sp
in r4
load r5, [r5]
in zr
in flags
cmp zr, flags
jg label_31
nor flags, r4, 27567
sub r3, r4, 7352
load r2, [255]
load r4, [r3]
in r4
in r2
cmp r4, r2
jmp label_36
label_36:
label_31:
and flags, flags, 32478
nor r5, r5, 16050
and zr, r1, zr
nor r4, r3, r5
in flags
in flags
cmp flags, flags
jle label_41
add r3, r3, 18894
in r1
in r1
cmp r1, r1
je label_43
label_43:
add r1, r3, r3
out r2
load r4, [sp]
load r1, [18283]
out sp
label_41:
store [r5], zr
lsl r3, flags, 34305
in r5
in r1
cmp r5, r1
jmp label_51
in r4
in r5
cmp r4, r5
jg label_52
label_52:
label_51:
and r3, r1, r1
nand r4, r1, 45906
in zr
load sp, [255]
store [r5], r3
lsr sp, r2, zr
in flags
in zr
cmp flags, zr
jl label_59
out r4
in r4
in r1
cmp r4, r1
jle label_61
label_61:
sub zr, r4, 37820
label_59:
add zr, r2, 29970
or r5, r1, 20667
load r5, [r3]
in flags
in r1
cmp flags, r1
jg label_66
load r5, [0]
label_66:
nand sp, zr, zr
in r3
in r3
in zr
cmp r3, zr
jbe label_70
store [r5], r4
in r5
out sp
lsr r2, r3, zr
label_70:
out flags
in r4
in sp
cmp r4, sp
ja label_76
in zr
in sp
cmp zr, sp
jmp label_77
label_77:
in r5
in r5
cmp r5, r5
ja label_78
label_78:
nor r1, r2, r4
in r3
in sp
cmp r3, sp
ja label_80
label_80:
load r3, [flags]
out sp
nor r1, r2, r4
in r3
lsr r5, r3, 17389
in sp
in r4
cmp sp, r4
jmp label_86
label_86:
label_76:
add r5, r1, r2
in zr
in flags
cmp zr, flags
je label_88
in zr
in r5
cmp zr, r5
jmp label_89
label_89:
load r3, [r5]
in r1
in r1
cmp r1, r1
je label_91
label_91:
in r2
in r5
cmp r2, r5
jne label_92
label_92:
label_88:
xor r1, zr, r4
in sp
in r3
cmp sp, r3
jle label_94
in r4
in r5
cmp r4, r5
ja label_95
label_95:
load r3, [r4]
in r3
in r2
cmp r3, r2
ja label_97
label_97:
in r1
in r1
in r5
cmp r1, r5
jle label_99
label_99:
nand r4, sp, r5
in r2
in r2
cmp r2, r2
jge label_101
label_101:
nor flags, r2, 61992
label_94:
store [r1], r5
store [r2], r1
in r1
in r5
cmp r1, r5
je label_105
in r4
in r2
cmp r4, r2
jne label_106
label_106:
in r4
in flags
cmp r4, flags
jge label_107
label_107:
in r1
in r3
cmp r1, r3
jae label_108
label_108:
load r5, [r2]
in r1
in r2
cmp r1, r2
jle label_110
label_110:
in r2
in r5
in r2
cmp r5, r2
jb label_112
label_112:
in r1
in zr
cmp r1, zr
jae label_113
label_113:
store [18283], zr
label_105:
nand flags, zr, sp
load r5, [r5]
lsr r2, r4, r2
in r4
in r3
cmp r4, r3
jl label_118
sub r3, flags, 25645
out r2
in r3
in r2
cmp r3, r2
ja label_121
label_121:
nor r5, r2, r3
label_118:
nand zr, r4, sp
xor r3, r2, 63585
load flags, [0]
in r3
in zr
cmp r3, zr
jbe label_126
in r4
in flags
cmp r4, flags
je label_127
label_127:
load r4, [7]
nand r2, r1, 37003
in flags
in sp
cmp flags, sp
jle label_130
label_130:
and sp, r3, flags
or r1, r2, 19753
in flags
in zr
cmp flags, zr
jb label_133
label_133:
load r2, [r4]
nand r4, r2, 47984
load r4, [r4]
nor r3, flags, 19246
label_126:
in r2
in sp
cmp r2, sp
jg label_138
out r1
nand r3, zr, sp
out sp
nor r2, sp, flags
in flags
xor zr, r1, r2
nor flags, r2, r5
in r2
in r2
cmp r2, r2
ja label_146
label_146:
store [18283], r3
label_138:
nand sp, r1, r4
in sp
in r4
cmp sp, r4
jmp label_149
add flags, r5, r3
in r1
in zr
cmp r1, zr
jle label_151
label_151:
lsl sp, r5, 47648
load r5, [r3]
label_149:
in sp
in r5
cmp sp, r5
ja label_154
and zr, r3, 42428
in r5
in flags
cmp r5, flags
je label_156
label_156:
load zr, [r2]
in r4
in r1
cmp r4, r1
jbe label_158
label_158:
label_154:
in r2
in r3
cmp r2, r3
jbe label_159
in zr
in r4
cmp zr, r4
jg label_160
label_160:
in r2
in r1
cmp r2, r1
jb label_161
label_161:
nor zr, r3, 49988
in r2
in r5
cmp r2, r5
jae label_163
label_163:
in r1
in zr
cmp r1, zr
jae label_164
label_164:
nor zr, r4, r1
in sp
in flags
cmp sp, flags
jg label_166
label_166:
lsr r5, zr, 30142
xor r4, r4, 55283
in flags
label_159:
store [7], r1
lsl flags, flags, 57916
load sp, [18283]
in zr
in r1
cmp zr, r1
jle label_173
in r5
in r3
cmp r5, r3
jg label_174
label_174:
label_173:
load r5, [255]
load r4, [7]
in r4
in r4
cmp r4, r4
jge label_177
out r5
in r1
in r1
cmp r1, r1
je label_179
label_179:
in flags
xor zr, flags, r5
nand r3, sp, 31843
sub r5, r5, r5
in r2
in r4
cmp r2, r4
ja label_184
label_184:
in flags
in r1
cmp flags, r1
jg label_185
label_185:
in r1
in r4
cmp r1, r4
jbe label_186
label_186:
in sp
in zr
cmp sp, zr
jmp label_187
label_187:
label_177:
out flags
lsr r1, r2, 28218
in zr
in r1
cmp zr, r1
jmp label_190
in r3
in r2
cmp r3, r2
jg label_191
label_191:
in r2
in r2
cmp r2, r2
jle label_192
label_192:
in r5
in sp
cmp r5, sp
jbe label_193
label_193:
load sp, [0]
in r5
in r5
cmp r5, r5
jne label_195
label_195:
out r5
in zr
in zr
cmp zr, zr
jle label_197
label_197:
in flags
in r1
cmp flags, r1
jb label_198
label_198:
label_190:
in r3
in r4
cmp r3, r4
je label_199
in r3
in flags
cmp r3, flags
jg label_200
label_200:
store [r3], sp
label_199:
store [r5], r2
store [18283], r5
sub r4, sp, flags
add r5, r3, sp
store [r1], r4
store [18283], r3
add r2, r3, sp
lsl zr, r5, 60570
in r1
in r2
cmp r1, r2
jg label_210
load flags, [0]
or r3, r5, r2
store [sp], r4
load r2, [r1]
label_210:
in r1
in flags
cmp r1, flags
jae label_215
store [18], r4
lsr r5, zr, 43167
xor sp, r4, r5
store [sp], r4
label_215:
nor r4, r3, 53582
in flags
in zr
cmp flags, zr
jg label_221
and r5, r2, r5
store [18], flags
in sp
in r2
cmp sp, r2
jl label_224
label_224:
lsr r2, r5, r2
load r2, [flags]
add r3, zr, 23096
and flags, r1, sp
label_221:
out r3
in flags
in sp
in sp
cmp sp, sp
jg label_231
xor r1, r2, flags
in zr
out sp
or r5, zr, r1
in sp
lsr zr, r5, 6292
lsr r2, r2, 48221
label_231:
load r5, [0]
nor flags, r2, r1
in r4
in zr
cmp r4, zr
jge label_241
in sp
in zr
cmp sp, zr
jge label_242
label_242:
xor r5, r1, 37949
in r2
in flags
cmp r2, flags
jne label_244
label_244:
xor r4, flags, 1979
in r2
in r3
cmp r2, r3
je label_246
label_246:
nand r2, flags, 38469
xor r2, sp, r3
out r4
nor r5, r3, flags
label_241:
nor r2, flags, 10857
lsl r5, sp, r2
in r1
nand r1, sp, flags
load r4, [r4]
in zr
in r3
cmp zr, r3
jge label_256
in r1
in r1
cmp r1, r1
jmp label_257
label_257:
in r3
in flags
cmp r3, flags
jle label_258
label_258:
in zr
lsr r4, zr, r2
in r4
in r4
in r4
cmp r4, r4
jle label_262
label_262:
load r5, [sp]
nor r5, r1, 46577
label_256:
or r2, r5, 18457
in zr
in zr
cmp zr, zr
jmp label_266
in sp
in r5
cmp sp, r5
je label_267
label_267:
load r5, [0]
in r4
in r2
cmp r4, r2
je label_269
label_269:
load r4, [7]
store [flags], sp
store [zr], r5
label_266:
load zr, [flags]
out zr
out flags
sub r5, flags, 23810
in zr
in sp
in sp
cmp sp, sp
jbe label_278
out r4
nor zr, r2, 44764
load flags, [sp]
label_278:
store [r5], sp
out r4
store [zr], sp
load r5, [255]
out r1
load r5, [18]
in r1
in zr
cmp r1, zr
jl label_288
in zr
in r2
cmp zr, r2
jne label_289
label_289:
in r2
in r5
cmp r2, r5
je label_290
label_290:
and sp, r4, r1
and r5, r1, 38833
nor r3, r1, r4
nor flags, r5, 13823
or r2, r5, 33844
out r3
in r1
in r2
cmp r1, r2
ja label_297
label_297:
label_288:
add r1, r2, 24009
load r4, [r5]
load flags, [sp]
and r1, zr, r4
in flags
in r2
cmp flags, r2
je label_302
store [0], flags
store [r2], r4
out r5
in zr
load r1, [sp]
label_302:
in sp
in sp
cmp sp, sp
jge label_308
or r4, flags, 43867
in r1
in zr
cmp r1, zr
jg label_310
label_310:
in r4
out zr
in sp
in r2
cmp sp, r2
jae label_313
label_313:
in r3
in flags
cmp r3, flags
jle label_314
label_314:
in r2
in zr
cmp r2, zr
jle label_315
label_315:
label_308:
in sp
in sp
cmp sp, sp
jge label_316
in sp
or zr, sp, zr
in r2
in r4
cmp r2, r4
jle label_319
label_319:
store [r2], r3
store [r5], r5
label_316:
store [r2], flags
or r3, r1, r3
nor r3, r5, 26320
add r1, r4, r1
or r2, sp, r1
nand r4, r3, sp
in zr
nor flags, flags, flags
in r3
in r3
cmp r3, r3
jl label_330
in r2
in zr
cmp r2, zr
jg label_331
label_331:
load r2, [sp]
in sp
in flags
cmp sp, flags
jb label_333
label_333:
load zr, [0]
in zr
in flags
cmp zr, flags
jl label_335
label_335:
out r1
in r2
in flags
cmp r2, flags
jl label_337
label_337:
label_330:
lsr r2, r4, r1
in r5
in r1
cmp r5, r1
jg label_339
in zr
in zr
cmp zr, zr
jbe label_340
label_340:
add zr, r4, 60034
in zr
in flags
cmp zr, flags
ja label_342
label_342:
in r3
nor r1, r2, 9782
load r4, [r3]
load r3, [7]
in r3
in r3
cmp r3, r3
jg label_347
label_347:
label_339:
in r5
in r5
cmp r5, r5
jne label_348
sub r3, r3, zr
and zr, sp, r3
in sp
in zr
cmp sp, zr
je label_351
label_351:
in r4
load r3, [flags]
and r1, r4, zr
load r5, [r4]
load zr, [flags]
label_348:
add r4, zr, 23232
and sp, sp, 12031
or r4, r5, flags
in r1
in r4
cmp r1, r4
jne label_360
nand r5, zr, r5
or r3, r3, zr
in sp
and r5, r3, 59257
sub r2, sp, zr
in r3
in r1
cmp r3, r1
jg label_366
label_366:
or flags, r3, 44581
in r4
in sp
cmp r4, sp
jne label_368
label_368:
in sp
in r3
cmp sp, r3
jg label_369
label_369:
lsr r2, r4, r2
label_360:
or flags, r1, sp
in r5
in r1
cmp r5, r1
jge label_372
load r5, [r5]
load r1, [7]
in zr
in r1
cmp zr, r1
jge label_375
label_375:
in zr
store [18], r1
or sp, flags, 47753
and zr, r1, r3
in r3
sub r2, r2, 46839
in r5
or r2, r3, 7244
label_372:
in r1
in r3
in r3
cmp r3, r3
ja label_385
in r2
in r5
cmp r2, r5
jne label_386
label_386:
label_385:
add sp, flags, 37074
in r5
in r3
cmp r5, r3
jae label_388
store [zr], zr
in r3
in r1
cmp r3, r1
jae label_390
label_390:
label_388:
load r4, [zr]
in r4
in r2
cmp r4, r2
jge label_392
in r2
in r3
cmp r2, r3
je label_393
label_393:
load r4, [sp]
in r1
in r3
in zr
in zr
cmp zr, zr
jb label_397
label_397:
sub flags, r1, 23160
label_392:
in r4
in r2
cmp r4, r2
jl label_399
in sp
in r3
cmp sp, r3
jle label_400
label_400:
label_399:
lsl sp, r5, 58244
add sp, r5, zr
or flags, r3, 36514
out r4
in r4
in r4
cmp r4, r4
jg label_405
or sp, r5, flags
lsr r1, sp, 22192
out zr
or r4, sp, r2
in r4
in r4
cmp r4, r4
je label_410
label_410:
label_405:
in r2
in r1
cmp r2, r1
jbe label_411
load r3, [r5]
and r3, r5, 58985
label_411:
nand r4, r4, r5
lsr r4, r3, r3
in flags
in r2
cmp flags, r2
jbe label_416
in r1
in r3
cmp r1, r3
jmp label_417
label_417:
store [7], sp
store [sp], r4
in r2
in r5
cmp r2, r5
jmp label_420
label_420:
nand sp, r2, 50303
nand r2, r4, 21633
nand zr, sp, 41478
in zr
in zr
cmp zr, zr
jb label_424
label_424:
nor r4, r5, zr
xor r2, r1, flags
label_416:
sub sp, flags, flags
in r4
load r5, [18283]
or r2, r3, r2
in zr
in sp
cmp zr, sp
ja label_431
out r1
in r2
in sp
cmp r2, sp
jl label_433
label_433:
or r3, r5, 65341
in r2
in flags
in r4
cmp flags, r4
jae label_436
label_436:
in r3
store [r3], r1
in zr
in r4
cmp zr, r4
jl label_439
label_439:
store [18], r4
store [sp], r1
label_431:
in flags
store [255], r4
in r2
out r5
in r5
in sp
in flags
cmp sp, flags
jmp label_447
in r1
in r4
cmp r1, r4
jae label_448
label_448:
label_447:
in r3
in flags
cmp r3, flags
jb label_449
in r1
in r1
cmp r1, r1
ja label_450
label_450:
load r1, [255]
and r2, zr, 60087
in sp
in flags
cmp sp, flags
jl label_453
label_453:
or r1, flags, 20301
xor r5, r3, 50748
in zr
sub r3, r4, r1
in r4
in r4
cmp r4, r4
jl label_458
label_458:
in r4
in flags
cmp r4, flags
jbe label_459
label_459:
out r3
label_449:
in r2
nand zr, zr, 53624
lsl sp, r2, flags
in r3
in r5
cmp r3, r5
jl label_464
nor r2, zr, 9875
nand r5, sp, r5
sub r4, r2, 25111
xor r2, r5, zr
in r2
in r1
cmp r2, r1
jg label_469
label_469:
load flags, [255]
nand r5, flags, 42071
or flags, sp, 42204
label_464:
in sp
in sp
cmp sp, sp
jge label_473
in r4
in zr
cmp r4, zr
jb label_474
label_474:
and r4, r3, flags
in zr
in sp
cmp zr, sp
jbe label_476
label_476:
in flags
in r4
cmp flags, r4
jae label_477
label_477:
out r1
in r1
in flags
cmp r1, flags
jb label_479
label_479:
in r3
in r5
cmp r3, r5
jbe label_480
label_480:
load flags, [r4]
in zr
in r2
cmp zr, r2
jae label_482
label_482:
store [255], r3
in flags
in r4
cmp flags, r4
jb label_484
label_484:
label_473:
sub r2, r4, 56648
in r5
in flags
cmp r5, flags
ja label_486
nand flags, r3, r5
label_486:
nand r5, r1, r1
in sp
in zr
cmp sp, zr
jne label_489
load flags, [r3]
label_489:
nand r5, r5, r1
and r5, r4, 12347
nor r4, r2, r2
out zr
xor flags, flags, 12678
and r2, r4, sp
xor zr, sp, r3
load zr, [255]
or r2, r1, r2
load sp, [18]
lsl zr, r1, 28215
out sp
and flags, flags, r4
in zr
or flags, r2, 50584
in r1
in r5
cmp r1, r5
jg label_506
store [flags], r2
in r5
in r2
cmp r5, r2
jb label_508
label_508:
in sp
in r2
cmp sp, r2
jne label_509
label_509:
in sp
in flags
cmp sp, flags
je label_510
label_510:
label_506:
in zr
in zr
cmp zr, zr
jne label_511
xor r3, r5, 20517
in zr
in zr
cmp zr, zr
jl label_513
label_513:
in r1
in r5
cmp r1, r5
jbe label_514
label_514:
and r3, flags, 52765
add zr, r1, 19620
lsr r1, r5, zr
label_511:
in zr
in r4
cmp zr, r4
jae label_518
store [18283], r4
store [18], zr
out r5
and r5, sp, 5521
add r1, r3, r4
in r4
in sp
cmp r4, sp
jb label_524
label_524:
in zr
in r4
cmp zr, r4
jge label_525
label_525:
in flags
in r4
cmp flags, r4
jl label_526
label_526:
label_518:
lsl zr, r3, 33223
and r5, sp, flags
store [r3], sp
in r3
in zr
cmp r3, zr
jl label_530
in flags
in sp
in r3
or r3, flags, r5
in r1
in r2
cmp r1, r2
jle label_535
label_535:
in r3
in sp
cmp r3, sp
jmp label_536
label_536:
lsr r3, zr, 22455
and r1, sp, r5
in sp
in zr
cmp sp, zr
jle label_539
label_539:
load r2, [r1]
label_530:
in r1
in r5
cmp r1, r5
jne label_541
load r3, [zr]
nor r5, r1, 50422
in zr
in r4
cmp zr, r4
jge label_544
label_544:
in flags
in r3
cmp flags, r3
je label_545
label_545:
in r4
in r2
cmp r4, r2
jmp label_546
label_546:
label_541:
in zr
in r4
cmp zr, r4
jbe label_547
in zr
in r3
cmp zr, r3
jge label_548
label_548:
in zr
in r4
cmp zr, r4
ja label_549
label_549:
and flags, r2, 57573
in r5
in zr
cmp r5, zr
je label_551
label_551:
label_547:
in r4
in r1
cmp r4, r1
jb label_552
xor r4, flags, r5
store [0], r5
in zr
lsl r4, r1, r4
load sp, [r4]
in r4
in zr
cmp r4, zr
jge label_558
label_558:
add r5, r5, r4
label_552:
store [r1], r3
load r4, [18]
store [7], r3
in flags
in zr
cmp flags, zr
jb label_563
in zr
in r1
cmp zr, r1
jle label_564
label_564:
in flags
in r3
cmp flags, r3
jmp label_565
label_565:
in r1
in sp
cmp r1, sp
jne label_566
label_566:
label_563:
nand r5, r2, flags
in r4
in r4
cmp r4, r4
jmp label_568
nand r5, sp, 23167
nor r2, r1, 63852
store [r1], r4
sub r3, zr, 37347
lsr r2, r3, flags
or zr, flags, 55897
nor r4, r5, 40346
or sp, r5, 36271
and r2, r2, flags
label_568:
lsr sp, zr, 38710
out sp
xor r5, r4, r5
in r2
in r5
cmp r2, r5
jae label_581
load r1, [255]
in r4
in r4
cmp r4, r4
jle label_583
label_583:
store [r5], r2
label_581:
lsr sp, r1, 51609
in r5
in r1
cmp r5, r1
jge label_586
in r5
in zr
cmp r5, zr
jne label_587
label_587:
in r2
in zr
cmp r2, zr
jbe label_588
label_588:
store [r4], r1
label_586:
load r1, [7]
and r3, zr, r1
in zr
in r2
cmp zr, r2
je label_592
out r5
in r4
and r5, r3, r5
in zr
label_592:
in r3
in flags
cmp r3, flags
jmp label_597
in r3
in r5
cmp r3, r5
jbe label_598
label_598:
nand r2, r3, r2
out r3
add flags, flags, r1
out r1
in flags
in flags
cmp flags, flags
je label_603
label_603:
label_597:
store [r5], r2
xor r5, r1, 44519
store [255], r1
in zr
in r3
cmp zr, r3
jbe label_607
or zr, flags, flags
xor r2, r4, 21193
in flags
in sp
cmp flags, sp
jmp label_610
label_610:
label_607:
in flags
in flags
cmp flags, flags
jg label_611
load zr, [r3]
in r3
in r1
cmp r3, r1
jmp label_613
label_613:
in r3
lsl flags, flags, r3
load r5, [7]
load sp, [r3]
in r3
in r1
cmp r3, r1
jbe label_618
label_618:
load r1, [18283]
label_611:
store [18], r3
in zr
in flags
in r3
cmp flags, r3
jl label_622
sub r4, sp, r3
in r1
in r4
cmp r1, r4
jge label_624
label_624:
in r2
in r2
cmp r2, r2
jae label_625
label_625:
nor zr, r3, 25724
load r3, [r4]
lsr sp, r2, zr
load flags, [r4]
nor r5, r1, 18002
store [sp], r1
label_622:
xor r4, r4, 23421
in r1
in r5
cmp r1, r5
jle label_633
in sp
in flags
cmp sp, flags
jmp label_634
label_634:
sub flags, r1, 13089
in flags
in r2
cmp flags, r2
jae label_636
label_636:
out r1
store [r4], r2
in flags
nor r3, r4, sp
xor r5, r2, r5
in r3
in r2
cmp r3, r2
jmp label_642
label_642:
in r2
in r3
in zr
cmp r3, zr
jae label_644
label_644:
label_633:
or r3, r2, 5044
nand r1, sp, 12707
out r3
load zr, [18]
in flags
in r1
cmp flags, r1
jbe label_649
in flags
in flags
cmp flags, flags
je label_650
label_650:
load r5, [18283]
in r3
in r3
cmp r3, r3
jbe label_652
label_652:
in flags
in r2
cmp flags, r2
jg label_653
label_653:
in sp
in r5
in r1
cmp r5, r1
jb label_655
label_655:
store [255], r5
in zr
label_649:
in zr
in flags
cmp zr, flags
jge label_658
in zr
in zr
cmp zr, zr
jge label_659
label_659:
in r4
lsl r4, r2, zr
or zr, r5, r5
lsr flags, r4, 14917
out r4
in r2
in r1
store [7], r5
load flags, [18]
label_658:
nand r5, r3, 60940
in r5
in flags
cmp r5, flags
jle label_670
or flags, r3, 13760
in r3
in zr
in zr
cmp zr, zr
jle label_673
label_673:
add r2, r4, zr
label_670:
load r2, [18283]
nand r3, r5, r3
in r1
in r2
cmp r1, r2
jg label_677
lsl r3, r5, r2
or r3, sp, 60628
in r4
store [7], zr
or r5, sp, 10797
nand r5, r4, 45874
lsr r1, zr, r3
in zr
in r1
cmp zr, r1
jbe label_685
label_685:
load r2, [sp]
and flags, r1, r4
nor r3, r5, r2
label_677:
load r5, [r3]
in flags
in r5
cmp flags, r5
jge label_690
in r4
out r4
label_690:
store [0], r3
in flags
in r3
cmp flags, r3
jg label_694
out r4
nor r1, r3, r2
in r4
in r3
cmp r4, r3
jg label_697
label_697:
in r3
in r3
cmp r3, r3
jge label_698
label_698:
in zr
in zr
cmp zr, zr
jne label_699
label_699:
in r5
in r1
in flags
in r5
cmp flags, r5
jbe label_702
label_702:
store [18], sp
label_694:
out sp
in r3
nand r1, r5, r5
in r2
in r3
cmp r2, r3
jge label_707
load zr, [r4]
in r3
xor sp, sp, 54721
in sp
in zr
cmp sp, zr
jae label_711
label_711:
sub r5, r2, 62109
sub flags, sp, 23285
out r4
in flags
in r4
cmp flags, r4
je label_715
label_715:
label_707:
load r3, [7]
load r4, [r5]
nand r3, r1, 62763
lsr r2, r5, 31552
load r2, [zr]
load r5, [r5]
out r4
out zr
store [r2], zr
in r4
in r3
cmp r4, r3
jmp label_725
in r2
in sp
cmp r2, sp
je label_726
label_726:
out r2
nor r4, r4, zr
lsl r5, flags, r3
label_725:
and zr, r4, r2
in zr
in r3
cmp zr, r3
jge label_731
or r4, r4, 22567
store [7], r1
label_731:
in r5
in r1
cmp r5, r1
jle label_734
load r1, [zr]
load flags, [0]
in r4
in r1
cmp r4, r1
jle label_737
label_737:
in r1
in r3
cmp r1, r3
je label_738
label_738:
in zr
store [0], flags
in sp
in zr
cmp sp, zr
jg label_741
label_741:
store [flags], zr
label_734:
and r3, sp, r1
load r5, [255]
in r1
in r5
cmp r1, r5
jae label_745
and r4, r1, r2
nand zr, r2, r1
add r2, zr, r4
out r2
in zr
in r4
cmp zr, r4
jae label_750
label_750:
and r4, r4, r2
in flags
in r5
in sp
cmp r5, sp
jae label_753
label_753:
load r2, [18283]
in r3
in r5
cmp r3, r5
je label_755
label_755:
in r2
in r3
cmp r2, r3
jl label_756
label_756:
label_745:
lsr zr, sp, 27055
in r3
in r1
cmp r3, r1
jae label_758
in r5
in r3
in zr
cmp r3, zr
jne label_760
label_760:
in r5
in sp
cmp r5, sp
jae label_761
label_761:
lsr zr, r5, sp
label_758:
add r1, sp, 29119
in r5
in r1
cmp r5, r1
jb label_764
lsl sp, r3, zr
in r4
in r2
cmp r4, r2
jle label_766
label_766:
label_764:
or r5, r2, r5
out r2
in zr
in sp
cmp zr, sp
jge label_769
xor zr, r2, r4
or zr, r5, r5
and r4, r2, 29475
add r2, r3, 6045
label_769:
sub r5, r5, 14501
add r2, r4, 35310
xor r1, r1, 29983
or flags, flags, sp
store [0], sp
add r3, r1, 35553
nand r5, r4, 2986
load r2, [255]
store [r2], sp
load r5, [r5]
nor sp, sp, 10899
in r4
in flags
cmp r4, flags
ja label_785
in r5
in r1
add r5, r1, r4
out r2
label_785:
lsr r3, r2, r4
in r3
in r3
cmp r3, r3
jb label_791
lsr flags, zr, r1
in r1
nand zr, r5, 22096
or sp, r2, flags
out r5
in zr
in r2
cmp zr, r2
jne label_797
label_797:
in flags
in r3
cmp flags, r3
ja label_798
label_798:
out zr
label_791:
xor zr, r2, r2
lsr flags, flags, 17444
lsl r1, r2, sp
out sp
sub r2, sp, 3665
in r3
and r2, r1, r1
in r5
in r5
cmp r5, r5
jge label_807
store [0], r4
in r3
in r2
cmp r3, r2
jbe label_809
label_809:
or r4, sp, 20869
in sp
in flags
cmp sp, flags
jne label_811
label_811:
in flags
store [zr], r5
label_807:
load r5, [r1]
nand zr, zr, 59718
in r5
in r4
cmp r5, r4
jg label_816
lsl zr, r4, 47256
store [18283], r4
add r5, r3, 50617
in zr
label_816:
in r5
in r3
cmp r5, r3
ja label_821
out r4
in r5
in flags
cmp r5, flags
jmp label_823
label_823:
nand r4, r1, 14573
lsl r4, zr, r5
in r2
label_821:
out r4
nor r3, r2, 29363
in r2
in r4
cmp r2, r4
jbe label_829
in zr
in r3
cmp zr, r3
ja label_830
label_830:
label_829:
in flags
in flags
cmp flags, flags
jbe label_831
in sp
in zr
cmp sp, zr
jb label_832
label_832:
load r4, [r5]
in r2
and r1, r2, 37613
in r4
in r3
cmp r4, r3
jae label_836
label_836:
in r2
in zr
cmp r2, zr
jle label_837
label_837:
store [255], r4
label_831:
in r1
in r3
cmp r1, r3
jbe label_839
out r1
store [0], r4
in r2
in flags
cmp r2, flags
ja label_842
label_842:
in flags
in r3
cmp flags, r3
jl label_843
label_843:
and flags, r3, r4
in flags
in r1
cmp flags, r1
jmp label_845
label_845:
lsl zr, r1, 51795
add r1, flags, flags
label_839:
load r2, [r1]
in zr
in r5
cmp zr, r5
jmp label_849
add flags, r1, zr
out flags
in r4
in r1
cmp r4, r1
jmp label_852
label_852:
in r5
in flags
cmp r5, flags
jne label_853
label_853:
lsl zr, r2, 51249
lsr r5, r2, 5373
label_849:
load r5, [r1]
add r2, r2, zr
in flags
store [sp], r2
in r5
in zr
cmp r5, zr
jmp label_860
xor r2, zr, 61095
and sp, sp, 53914
in r2
add r2, r5, 62745
xor r5, r2, r3
add r2, sp, 38971
label_860:
nor r3, r5, r3
out r1
add sp, zr, zr
in r5
in r3
cmp r5, r3
jg label_870
in flags
in sp
cmp flags, sp
jge label_871
label_871:
in r1
in sp
cmp r1, sp
jge label_872
label_872:
in flags
in r4
cmp flags, r4
jl label_873
label_873:
xor r2, sp, 48033
in zr
lsl zr, flags, r2
in zr
in r1
cmp zr, r1
jbe label_877
label_877:
store [255], r5
out r3
or flags, flags, 44682
label_870:
in flags
lsr r4, r2, r5
in sp
in r4
cmp sp, r4
jle label_883
out r3
label_883:
out r5
and r3, r2, 41255
in r1
in r5
cmp r1, r5
jae label_887
in flags
in flags
cmp flags, flags
jae label_888
label_888:
and r5, flags, flags
add r4, flags, 19406
nand zr, r5, 34736
nand r2, r5, sp
in flags
load flags, [0]
in r4
in r1
cmp r4, r1
jge label_895
label_895:
store [255], r5
or zr, zr, r4
label_887:
add r2, r3, r4
add r1, sp, 4085
load sp, [255]
load r3, [0]
add r2, r4, sp
store [r2], r1
store [255], flags
in r4
in zr
cmp r4, zr
jle label_905
or r4, sp, 2852
store [255], sp
load r1, [r4]
in r3
and sp, sp, 52937
out r3
lsl flags, flags, 47124
out r5
label_905:
in r2
in r2
cmp r2, r2
jg label_914
nor flags, zr, 44509
load r1, [18]
or sp, r1, 31438
out r2
in r2
in r4
cmp r2, r4
jl label_919
label_919:
out sp
lsr r4, r1, r1
in r2
in r5
cmp r2, r5
je label_922
label_922:
lsl zr, flags, 17263
store [0], sp
in zr
in flags
cmp zr, flags
ja label_925
label_925:
label_914:
in r2
in r4
cmp r2, r4
jg label_926
in r4
in r5
cmp r4, r5
jb label_927
label_927:
in r4
in r2
cmp r4, r2
jl label_928
label_928:
store [r4], r5
in r2
in r2
cmp r2, r2
ja label_930
label_930:
in r1
in r5
cmp r1, r5
jge label_931
label_931:
in r3
in r2
cmp r3, r2
jge label_932
label_932:
in r3
in r2
cmp r3, r2
jg label_933
label_933:
in r1
out sp
store [r3], flags
lsl r3, r3, 59323
label_926:
store [18283], zr
load r3, [r4]
in sp
in sp
cmp sp, sp
jbe label_940
out flags
label_940:
load r3, [sp]
in zr
in zr
cmp zr, zr
jle label_943
xor r4, r2, r3
in r4
label_943:
in r5
in zr
cmp r5, zr
jae label_946
in r5
in r1
cmp r5, r1
jle label_947
label_947:
in r2
in flags
cmp r2, flags
jbe label_948
label_948:
or sp, r1, r4
in r1
in r5
cmp r1, r5
jbe label_950
label_950:
and flags, r3, 44254
load sp, [7]
in r5
in sp
cmp r5, sp
jmp label_953
label_953:
nor r2, zr, 5214
in r1
in zr
cmp r1, zr
je label_955
label_955:
label_946:
in r5
out zr
nor r3, sp, flags
in sp
in r4
cmp sp, r4
jmp label_959
in flags
in r3
cmp flags, r3
ja label_960
label_960:
label_959:
nor r3, r1, 59267
lsr r5, r5, r1
xor r5, zr, 60575
in flags
in r4
cmp flags, r4
jb label_964
store [18], flags
nand sp, zr, 5620
load r3, [18283]
lsr r4, r5, 65405
label_964:
or r4, r1, flags
xor sp, sp, flags
sub zr, r3, flags
nand r1, flags, 54445
nor r2, zr, 35931
in r4
in r5
cmp r4, r5
jl label_974
in sp
in zr
cmp sp, zr
jmp label_975
label_975:
lsr zr, r3, 26368
out sp
load r3, [18]
label_974:
in r1
or r2, r5, sp
or zr, flags, flags
out r5
store [r3], r4
or sp, r4, 32424
lsl r4, r4, 42607
load r5, [r4]
lsr sp, flags, 37420
add r5, flags, sp
and zr, zr, zr
store [18283], r3
in r3
in flags
cmp r3, flags
jge label_991
in flags
in r5
cmp flags, r5
ja label_992
label_992:
nor flags, r2, 20503
out zr
label_991:
sub flags, r5, flags
out r4
in flags
in r3
cmp flags, r3
jae label_997
in zr
in sp
cmp zr, sp
jle label_998
label_998:
load r5, [7]
store [0], r1
out r5
store [18283], sp
in r1
in zr
cmp r1, zr
jbe label_1003
label_1003:
label_997:
store [255], r3
in r4
in zr
cmp r4, zr
ja label_1005
in r4
in r5
cmp r4, r5
jg label_1006
label_1006:
label_1005:
in sp
in zr
cmp sp, zr
jl label_1007
in zr
in sp
cmp zr, sp
jbe label_1008
label_1008:
in flags
in r5
cmp flags, r5
ja label_1009
label_1009:
label_1007:
xor r5, r4, sp
in sp
in flags
in sp
cmp flags, sp
jb label_1012
in flags
in zr
cmp flags, zr
jl label_1013
label_1013:
in r4
in r5
cmp r4, r5
jle label_1014
label_1014:
in r4
in sp
in zr
cmp sp, zr
jmp label_1016
label_1016:
in zr
in r5
cmp zr, r5
jb label_1017
label_1017:
store [flags], sp
in r5
in r5
in r2
cmp r5, r2
jne label_1020
label_1020:
lsl zr, sp, 42380
in sp
in zr
cmp sp, zr
ja label_1022
label_1022:
label_1012:
in r2
in r1
cmp r2, r1
je label_1023
nor r4, zr, r5
xor flags, r1, 47
in r2
in r2
cmp r2, r2
ja label_1026
label_1026:
in zr
in r2
cmp zr, r2
jl label_1027
label_1027:
label_1023:
load zr, [7]
in r3
in flags
cmp r3, flags
jne label_1029
in r2
in sp
cmp r2, sp
jl label_1030
label_1030:
xor sp, r1, 19171
label_1029:
store [18283], zr
out r2
lsr r5, r2, zr
in r3
in r3
cmp r3, r3
jbe label_1035
in r5
lsr sp, r2, 9122
load r1, [zr]
lsr flags, r5, 24578
store [0], flags
or r4, flags, 18922
out r3
out r5
out r3
in zr
in r3
cmp zr, r3
jbe label_1045
label_1045:
label_1035:
and sp, r2, 12808
sub r2, flags, 16303
in r5
in r5
cmp r5, r5
jb label_1048
or r2, r5, 36689
store [r5], r5
in r5
out r3
in r1
nor r2, r3, 19141
in r3
in flags
cmp r3, flags
jle label_1055
label_1055:
add r3, zr, r3
label_1048:
store [7], r4
xor sp, r4, r4
and r5, zr, zr
or r5, r1, 46965
and r3, r2, r4
lsr r1, r1, 14141
in r3
in r3
cmp r3, r3
jmp label_1063
load sp, [7]
out sp
label_1063:
out r1
or r2, r5, 42762
load zr, [r2]
in sp
in r2
cmp sp, r2
ja label_1069
in flags
in flags
and r1, r2, 59984
out r5
load r3, [7]
sub zr, r1, sp
in r5
in zr
cmp r5, zr
jae label_1076
label_1076:
label_1069:
in r5
in r5
cmp r5, r5
jge label_1077
in r5
xor flags, flags, 64323
store [r2], flags
nand zr, r5, 1589
lsl r2, r5, zr
in r2
in flags
cmp r2, flags
jmp label_1083
label_1083:
load sp, [sp]
or r4, r1, 15229
load r4, [sp]
label_1077:
out r3
in sp
in r1
cmp sp, r1
ja label_1088
load r5, [18]
nand r3, flags, r1
and sp, sp, r3
in sp
in r5
cmp sp, r5
je label_1092
label_1092:
load zr, [r5]
or r5, r5, 16634
in r1
in r4
cmp r1, r4
jg label_1095
label_1095:
in zr
out r3
label_1088:
sub r5, sp, 4400
sub r3, r1, 55366
in r1
in zr
cmp r1, zr
jbe label_1100
lsl sp, r1, 56607
lsr sp, r5, 28452
nor flags, r1, 23371
in r2
in r5
cmp r2, r5
jl label_1104
label_1104:
label_1100:
out r5
in flags
in r5
cmp flags, r5
jl label_1106
in flags
store [r2], zr
or r3, sp, r2
in zr
in r2
cmp zr, r2
je label_1110
label_1110:
in zr
in flags
cmp zr, flags
jle label_1111
label_1111:
in r2
in flags
in r1
cmp flags, r1
jbe label_1113
label_1113:
lsr flags, r5, r4
add r4, zr, 35062
in r4
in flags
cmp r4, flags
jl label_1116
label_1116:
add sp, zr, 13769
label_1106:
lsl zr, zr, 30800
nor r1, flags, 5748
out r1
load r3, [r2]
lsl r4, r4, 15939
in flags
in zr
cmp flags, zr
ja label_1123
in sp
in r4
cmp sp, r4
jge label_1124
label_1124:
lsr zr, r4, r5
load r4, [sp]
lsr r2, sp, 38038
label_1123:
in r5
in r4
cmp r5, r4
jle label_1128
in zr
add r1, r2, 10605
and r2, flags, r4
load r3, [r3]
label_1128:
sub sp, r4, flags
out sp
in r1
lsl r5, flags, r5
sub r3, r2, sp
in r2
in sp
cmp r2, sp
jge label_1138
in r4
load r1, [flags]
in r2
in r2
in r5
in zr
cmp r5, zr
ja label_1143
label_1143:
label_1138:
load r5, [255]
in r2
in r4
cmp r2, r4
jge label_1145
xor r2, r2, sp
load r5, [18]
and r3, r1, 34952
in r4
in zr
cmp r4, zr
jg label_1149
label_1149:
store [sp], r5
in r5
in r1
cmp r5, r1
je label_1151
label_1151:
sub flags, r3, 15716
in flags
in sp
cmp flags, sp
jb label_1153
label_1153:
store [7], r5
in sp
in r3
cmp sp, r3
jbe label_1155
label_1155:
label_1145:
add sp, r5, 45907
add zr, r3, r4
in r1
in flags
cmp r1, flags
ja label_1158
xor r1, r2, 14759
in sp
in r5
cmp sp, r5
jle label_1160
label_1160:
in r4
in zr
cmp r4, zr
jl label_1161
label_1161:
lsl sp, sp, 8454
in zr
in r3
cmp zr, r3
jbe label_1163
label_1163:
in r4
in r2
cmp r4, r2
jge label_1164
label_1164:
label_1158:
in r2
in zr
cmp r2, zr
jl label_1165
lsr flags, r5, 39891
load flags, [r3]
in flags
in r4
cmp flags, r4
jl label_1168
label_1168:
in r3
in r2
cmp r3, r2
je label_1169
label_1169:
in r5
in flags
cmp r5, flags
jb label_1170
label_1170:
load r3, [255]
lsl r2, r4, 51780
in zr
in r1
cmp zr, r1
jae label_1173
label_1173:
in sp
in zr
cmp sp, zr
jge label_1174
label_1174:
in r1
label_1165:
lsl r3, r3, 950
nor sp, zr, zr
in r1
in flags
cmp r1, flags
jae label_1178
in r1
in flags
cmp r1, flags
jae label_1179
label_1179:
in r3
in r1
cmp r3, r1
jb label_1180
label_1180:
add flags, r4, r3
load r1, [18283]
or r1, r4, 61040
lsl r3, r1, r4
lsl flags, r5, r2
in zr
in sp
cmp zr, sp
jle label_1186
label_1186:
in r2
in r5
cmp r2, r5
jle label_1187
label_1187:
label_1178:
in flags
in zr
in r4
cmp zr, r4
jmp label_1189
in r5
sub zr, r3, 40457
in r5
in zr
cmp r5, zr
jne label_1192
label_1192:
in sp
store [r3], r2
lsl sp, flags, 8924
in r1
in flags
cmp r1, flags
jge label_1196
label_1196:
out r1
load zr, [7]
in zr
in r5
in zr
cmp r5, zr
ja label_1200
label_1200:
label_1189:
in zr
in sp
cmp zr, sp
jb label_1201
in flags
in flags
cmp flags, flags
jge label_1202
label_1202:
out flags
in r3
in r4
in r5
cmp r4, r5
jmp label_1205
label_1205:
label_1201:
in zr
in r4
cmp zr, r4
jle label_1206
in zr
in r3
cmp zr, r3
jmp label_1207
label_1207:
in r3
in r5
cmp r3, r5
jne label_1208
label_1208:
in r2
in r4
in r3
in sp
cmp r3, sp
jle label_1211
label_1211:
or sp, r4, flags
or r1, r3, 16376
lsr r5, zr, r2
in sp
in sp
cmp sp, sp
jle label_1215
label_1215:
label_1206:
xor flags, flags, r4
in sp
in r2
cmp sp, r2
jb label_1217
add r5, r5, 12083
store [r1], r4
in r2
in r1
load r2, [r4]
in sp
label_1217:
in r4
in r3
cmp r4, r3
jb label_1224
in r5
in r3
cmp r5, r3
jbe label_1225
label_1225:
in r3
in sp
cmp r3, sp
jge label_1226
label_1226:
and r3, sp, 25538
in r1
in r3
cmp r1, r3
jne label_1228
label_1228:
in flags
in r4
out r1
out sp
in r5
in zr
cmp r5, zr
jl label_1233
label_1233:
label_1224:
nand sp, r2, r4
store [18], sp
and r1, r4, 17915
lsl r2, r5, r3
nand r2, r5, 38923
and r1, zr, 43201
xor flags, sp, 2825
in r3
in flags
cmp r3, flags
ja label_1241
store [sp], sp
label_1241:
in sp
in r1
cmp sp, r1
jge label_1243
nor r2, r3, r1
in r4
xor flags, r1, r1
in r1
in r4
cmp r1, r4
jg label_1247
label_1247:
out r2
label_1243:
in sp
in r4
cmp sp, r4
jae label_1249
load r2, [255]
load r4, [r4]
in zr
in sp
in sp
cmp sp, sp
jbe label_1253
label_1253:
lsr sp, r1, r2
label_1249:
in flags
in flags
in r2
in flags
cmp r2, flags
jmp label_1257
nand flags, r4, 50470
in r1
in r3
cmp r1, r3
jbe label_1259
label_1259:
lsl r4, r1, 59439
nor flags, r2, r2
in r4
in sp
cmp r4, sp
jmp label_1262
label_1262:
or r4, flags, 60505
out sp
store [r4], r5
load r5, [255]
add r3, r4, sp
load r4, [zr]
label_1257:
out zr
out r3
in r3
in r4
cmp r3, r4
jl label_1271
load r3, [flags]
xor r2, r3, r3
and r3, r5, flags
label_1271:
in r2
in zr
cmp r2, zr
jl label_1275
xor sp, r4, 61593
out r5
in r2
in r3
cmp r2, r3
jle label_1278
label_1278:
add r1, r4, r3
nor flags, r5, 42533
label_1275:
in zr
in r5
cmp zr, r5
jl label_1281
out sp
in r5
in zr
cmp r5, zr
ja label_1283
label_1283:
lsl r3, r4, r1
and flags, r3, 26999
sub sp, r2, r4
in r3
in sp
cmp r3, sp
je label_1287
label_1287:
nor sp, r1, r1
label_1281:
lsl r1, r2, r5
xor sp, r2, r3
store [zr], r3
out flags
in r1
in r5
cmp r1, r5
jae label_1293
in zr
label_1293:
out r5
and sp, zr, 63475
add r1, zr, 41648
store [7], zr
in sp
in r2
cmp sp, r2
jmp label_1299
out r3
and r1, r5, 43270
in zr
in r4
cmp zr, r4
jg label_1302
label_1302:
in r4
add r3, r4, r4
xor r5, r2, sp
load r4, [255]
load zr, [flags]
out r4
or r1, r3, flags
label_1299:
store [r3], r3
in flags
in r1
cmp flags, r1
jge label_1311
sub sp, r5, r2
out sp
in flags
in sp
cmp flags, sp
jb label_1314
label_1314:
lsl r4, r1, zr
label_1311:
sub flags, zr, 62412
in sp
in sp
cmp sp, sp
ja label_1317
or zr, r3, zr
lsr r1, r3, 38990
load r3, [r1]
or r5, sp, 54233
sub r4, flags, r3
in r4
in sp
cmp r4, sp
jae label_1323
label_1323:
label_1317:
in sp
in flags
cmp sp, flags
jge label_1324
sub r3, zr, 30952
in flags
sub flags, r1, sp
label_1324:
xor r5, sp, r4
load r2, [7]
nand sp, r3, r3
in flags
in zr
cmp flags, zr
jbe label_1331
in sp
label_1331:
or r5, r1, r5
in r1
lsr r3, sp, 42607
in r1
in sp
cmp r1, sp
ja label_1336
load zr, [sp]
in r5
in r4
cmp r5, r4
jg label_1338
label_1338:
label_1336:
in r5
in flags
cmp r5, flags
jne label_1339
load sp, [18283]
load sp, [r2]
out zr
label_1339:
nand r1, flags, r2
in r1
in r4
in zr
cmp r4, zr
ja label_1345
in r2
sub zr, flags, 36655
label_1345:
in r3
in r5
in r3
cmp r5, r3
jge label_1349
store [18], r1
in r3
in r4
cmp r3, r4
jae label_1351
label_1351:
nand r5, r1, 19857
in r4
in r1
cmp r4, r1
jge label_1353
label_1353:
in r3
in r3
cmp r3, r3
jae label_1354
label_1354:
out flags
out zr
in r4
in r4
cmp r4, r4
jg label_1357
label_1357:
label_1349:
lsr flags, sp, flags
out sp
out flags
in r3
in zr
cmp r3, zr
jle label_1361
in r3
in r1
cmp r3, r1
jg label_1362
label_1362:
load r3, [zr]
or zr, r1, 31751
lsr flags, flags, r5
lsl r2, r1, 50859
label_1361:
xor zr, zr, 49971
add r1, r2, sp
add flags, sp, 42566
in r3
in flags
cmp r3, flags
ja label_1370
sub r2, r1, r5
lsr flags, r4, 348
in r4
in r5
cmp r4, r5
jle label_1373
label_1373:
xor r2, r3, r4
label_1370:
in r5
in r1
cmp r5, r1
jge label_1375
nand zr, r3, sp
store [0], zr
sub r2, r3, r4
label_1375:
lsr r2, r4, zr
out flags
in r4
in r4
cmp r4, r4
je label_1381
in r4
lsr r1, r2, 14160
nand zr, r2, r3
in sp
in flags
cmp sp, flags
jbe label_1385
label_1385:
in r5
in r4
cmp r5, r4
ja label_1386
label_1386:
label_1381:
in r5
in r1
cmp r5, r1
jg label_1387
out r4
store [18283], flags
sub r2, r1, 64912
in sp
in zr
cmp sp, zr
jge label_1391
label_1391:
in r2
in r3
cmp r2, r3
jae label_1392
label_1392:
in zr
in zr
cmp zr, zr
ja label_1393
label_1393:
and r2, r2, 7999
store [r5], r3
in r1
in r4
cmp r1, r4
jge label_1396
label_1396:
label_1387:
in r4
in r2
cmp r4, r2
jb label_1397
in r3
in r4
cmp r3, r4
jbe label_1398
label_1398:
label_1397:
add flags, r3, sp
store [r5], r5
store [r3], r2
store [r4], r2
store [18283], r5
in sp
in zr
cmp sp, zr
jne label_1404
nor r4, sp, 19214
label_1404:
xor sp, flags, 21101
out r3
sub flags, r5, 54864
in r2
in sp
cmp r2, sp
ja label_1409
lsl sp, r1, zr
nand sp, r4, zr
in r1
in r1
add r2, r4, 21384
in r4
in r5
cmp r4, r5
jle label_1415
label_1415:
in r2
in r2
cmp r2, r2
jb label_1416
label_1416:
label_1409:
lsl r2, r4, r1
in zr
out r5
out r4
in flags
in zr
cmp flags, zr
jg label_1421
xor r3, r4, sp
out r2
xor r5, flags, 63504
label_1421:
in sp
in r5
cmp sp, r5
je label_1425
and r3, r4, r4
in r2
in r5
cmp r2, r5
jne label_1427
label_1427:
nor zr, r1, zr
add r4, r2, sp
load r4, [7]
in r2
in r1
cmp r2, r1
jbe label_1431
label_1431:
label_1425:
out r5
in flags
in r4
cmp flags, r4
jbe label_1433
in r3
in zr
cmp r3, zr
je label_1434
label_1434:
in r5
in r1
cmp r5, r1
jbe label_1435
label_1435:
in r2
in zr
cmp r2, zr
jne label_1436
label_1436:
xor r1, r3, 53219
store [flags], zr
in r1
in flags
cmp r1, flags
jge label_1439
label_1439:
in zr
in r2
cmp zr, r2
je label_1440
label_1440:
out r4
in flags
in r5
cmp flags, r5
jbe label_1442
label_1442:
in sp
in r1
cmp sp, r1
jl label_1443
label_1443:
label_1433:
in r1
in r2
cmp r1, r2
jl label_1444
in sp
in zr
cmp sp, zr
ja label_1445
label_1445:
out r2
add sp, r5, 50794
out r1
in r1
in zr
cmp r1, zr
jb label_1449
label_1449:
in r5
store [r4], flags
nor r1, r4, zr
in zr
in sp
label_1444:
load sp, [255]
store [flags], r1
xor r1, r5, 161
store [0], r5
in r5
in r4
cmp r5, r4
je label_1459
in r4
in r5
in zr
cmp r5, zr
jne label_1461
label_1461:
in r3
in r3
in zr
cmp r3, zr
jb label_1463
label_1463:
in zr
in flags
cmp zr, flags
jl label_1464
label_1464:
label_1459:
in flags
in r2
cmp flags, r2
jge label_1465
in zr
in flags
cmp zr, flags
je label_1466
label_1466:
store [0], r2
in zr
lsl r2, flags, 48199
out r1
nand r1, zr, r4
nand sp, r1, zr
lsl sp, r2, 38166
in sp
in sp
cmp sp, sp
jae label_1474
label_1474:
in r4
in r4
cmp r4, r4
jne label_1475
label_1475:
and r1, sp, r2
label_1465:
in r2
in r4
cmp r2, r4
jmp label_1477
load r3, [zr]
in r3
in r5
cmp r3, r5
ja label_1479
label_1479:
in r5
in zr
cmp r5, zr
jle label_1480
label_1480:
xor r3, zr, 37033
sub r1, r2, flags
load r1, [18283]
in sp
in r3
cmp sp, r3
jg label_1484
label_1484:
in r5
in sp
label_1477:
in r3
in r1
cmp r3, r1
jb label_1487
out flags
out zr
in r1
in r5
cmp r1, r5
jl label_1490
label_1490:
lsl r1, sp, zr
nor zr, zr, 58913
in r2
in r5
cmp r2, r5
jge label_1493
label_1493:
xor r3, r3, r3
nor r5, r4, 22231
label_1487:
in sp
load r3, [zr]
or r3, zr, 58243
xor sp, sp, zr
in r2
in sp
cmp r2, sp
je label_1500
sub r4, zr, 20786
label_1500:

`