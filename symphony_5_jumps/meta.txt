kind = sequential
title = "Jumps"
size = [-256, -256, 255, 255]
immutable_program = true
immutable_spec = true
copy_solution_to_level = ["symphony_6_ram"]
no_score = true
dialogue = [
  (info, `These are the [code][color=#ff9800]Modes[/color] of [color=#e49f44]Symphony[/color]:

[code]0 IO
1 ALU
2 JUMP
3 RAM[/code]

In this level we implement the JUMP mode. As always the instruction encoding is as follows:

[code][color=#ff9800]M[/color] = Mode
[color=#ff6680]O[/color] = Opcode
[color=#9966ff]I[/color] = Immediate bit
[color=#ffe666]D[/color] = Destination register
[color=#66ff99]A[/color] = Argument A
[color=#66ccff]B[/color] = Argument B
[color=#bbbbbb]0[/color] = Unused / zero[/code]

[code][color=#ff9800]MM[/color][color=#bbbbbb]O[/color][color=#9966ff]I[/color][color=#ff6680]OOOO[/color] [color=#ffe666]DDDD[/color][color=#66ff99]AAAA[/color] [color=#bbbbbb]0000[/color][color=#66ccff]BBBB[/color] [color=#bbbbbb]00000000[/color][/code]

In JUMP mode, [color=#66ff99]argument A[/color] are the flags and should be compared with the condition, which is the [color=#ff6680]opcode[/color]. To compare them, use the "cond" custom component you built earlier.

If the flags match the condition, overwrite the counter value with [color=#66ccff]argument B[/color].`)]
default_isa_spec = `

[settings]
name = "Symphony"

[fields]

register
zr 0000
r1 0001
r2 0010
r3 0011
r4 0100
r5 0101
r6 0110
r7 0111
r8 1000
r9 1001
r10 1010
r11 1011
r12 1100
r13 1101
sp 1110
flags 1111

[instructions]

or %a(register), %b(register), %c(register)
01000001 aaaabbbb 0000cccc 00000000
OR %b and %c and store the result in %a.

nand %a(register), %b(register), %c(register)
01000000 aaaabbbb 0000cccc 00000000
NAND %b and %c and store the result in %a.

nor %a(register), %b(register), %c(register)
01000011 aaaabbbb 0000cccc 00000000
NOR %b and %c and store the result in %a.

and %a(register), %b(register), %c(register)
01000010 aaaabbbb 0000cccc 00000000
AND %b and %c and store the result in %a.

add %a(register), %b(register), %c(register)
01000100 aaaabbbb 0000cccc 00000000
ADD %b and %c and store the result in %a.

sub %a(register), %b(register), %c(register)
01000101 aaaabbbb 0000cccc 00000000
SUB %b and %c and store the result in %a.

xor %a(register), %b(register), %c(register)
01000110 aaaabbbb 0000cccc 00000000
XOR %b and %c and store the result in %a.

lsl %a(register), %b(register), %c(register)
01000111 aaaabbbb 0000cccc 00000000
LSL %b and %c and store the result in %a.

lsr %a(register), %b(register), %c(register)
01001000 aaaabbbb 0000cccc 00000000
LSR %b and %c and store the result in %a.

cmp %a(register), %b(register)
01001001 1111aaaa 0000bbbb 00000000
Compares %a and %b and store the resulting flags in r6.


or %a(register), %b(register), %c(immediate)
01010001 aaaabbbb cccccccc cccccccc
OR %b and %c and store the result in %a.

nand %a(register), %b(register), %c(immediate)
01010000 aaaabbbb cccccccc cccccccc
NAND %b and %c and store the result in %a.

nor %a(register), %b(register), %c(immediate)
01010011 aaaabbbb cccccccc cccccccc
NOR %b and %c and store the result in %a.

and %a(register), %b(register), %c(immediate)
01010010 aaaabbbb cccccccc cccccccc
AND %b and %c and store the result in %a.

add %a(register), %b(register), %c(immediate)
01010100 aaaabbbb cccccccc cccccccc
ADD %b and %c and store the result in %a.

sub %a(register), %b(register), %c(immediate)
01010101 aaaabbbb cccccccc cccccccc
SUB %b and %c and store the result in %a.

xor %a(register), %b(register), %c(immediate)
01010110 aaaabbbb cccccccc cccccccc
XOR %b and %c and store the result in %a.

lsl %a(register), %b(register), %c(immediate)
01010111 aaaabbbb cccccccc cccccccc
LSL %b and %c and store the result in %a.

lsr %a(register), %b(register), %c(immediate)
01011000 aaaabbbb cccccccc cccccccc
LSR %b and %c and store the result in %a.

cmp %a(register), %b(immediate)
01011001 1111aaaa bbbbbbbb bbbbbbbb
Compares %a and %b and store the resulting flags in r6.


jmp %a(register)
10001000 00001111 0000aaaa 00000000
Jump to %a


jmp %a(immediate | label)
10011000 11111111 aaaaaaaa aaaaaaaa
Jump to %a

je %a(immediate | label)
10010001 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the values were equal (reading results from 'flags').

jne %a(immediate | label)
10011001 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the values were not equal (reading results from 'flags').


jb %a(immediate | label)
10010010 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was below (unsigned) the second (reading results from 'flags').

jae %a(immediate | label)
10011010 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was above (unsigned) or euqal to the second (reading results from 'flags').

jbe %a(immediate | label)
10010011 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the First value was below (unsigned) or equal to the second (reading results from 'flags').

ja %a(immediate | label)
10011011 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was above (unsigned) the second (reading results from 'flags').


jl %a(immediate | label)
10010100 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was less (signed) than the second (reading results from 'flags').

jge %a(immediate | label)
10011100 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was greater (signed) or equal to the second (reading results from 'flags').

jle %a(immediate | label)
10010101 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was less (signed) or equal to the second (reading results from 'flags').

jg %a(immediate | label)
10011101 11111111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was greater (signed) than the second (reading results from 'flags').

in %a(register)
00000001 aaaa0000 00000000 00000000
Loads an input and stores it in %a

out %a(register)
00000010 00000000 0000aaaa 00000000
Sends %a to output

nop
00000000 00000000 00000000 00000000
Does nothing

`
default_assembly = `xor r5, r5, r12
lsr r2, r10, r12
or sp, flags, r2
and r3, r6, 61888
jmp label_5
jmp label_6
and r6, r7, 63410
label_6:
label_5:
jmp label_10
lsr r12, r4, r3
label_10:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_13:
add r13, r5, 31616
ja label_13
lsr r4, r8, 13182
lsr r9, r8, 29359
cmp r5, r10
xor r5, r3, r2
xor r4, r9, 60002
or zr, r10, 39662
and r5, r7, 14395
nand r10, zr, 16925
lsr sp, zr, r5
or sp, r6, 32656
jmp label_26
nor r13, r3, 10201
label_26:
cmp r9, r12
or r11, r8, r12
nand r10, zr, 41125
cmp r13, r1
xor r13, r3, r12
cmp r2, r3
and r12, r1, r6
add r5, r2, r12
cmp r9, r13
nor r12, r1, 58961
nor r7, r5, r8
sub r13, r13, r1
and r9, r8, r8
lsl r13, flags, 43634
jmp label_43
and r4, flags, 48509
label_43:
jmp label_46
add r12, r9, 58110
label_46:
jae label_49
sub r7, r4, 49175
label_49:
jle label_52
lsl sp, r5, r6
label_52:
sub r12, zr, 14630
jb label_56
nand r12, r1, 61817
label_56:
xor r3, r4, r8
jmp label_60
cmp r10, r2
label_60:
lsl r6, r2, r12
lsl flags, r3, 36738
lsr r10, r4, sp
lsr r11, r7, 16359
jg label_67
xor r13, r13, 16050
label_67:
sub r10, r8, 19776
and r4, r4, r11
xor r3, sp, r2
nand r13, flags, r5
lsr r11, r3, sp
nor r1, r1, 35113
jl label_76
lsl r3, r11, r9
label_76:
jmp label_79
or r9, r10, 60901
label_79:
cmp r11, r12
cmp r6, r12
or r6, r9, r8
xor sp, r10, 5350
and r3, r1, r11
jge label_87
nor r11, flags, 19967
label_87:
and flags, r1, 15296
nor r9, r9, r1
nor r12, r5, 8525
or r13, r3, 5465
jmp label_94
and r13, r4, 7081
label_94:
jb label_97
lsl r4, r12, r4
label_97:
jge label_100
jmp label_101
nor r10, r8, r9
label_101:
label_100:
and r13, r1, 7128
or r10, zr, 43593
lsr r1, flags, zr
cmp r8, r4
cmp r12, r7
jl label_110
jge label_111
jg label_112
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_113:
or zr, r12, r12
jle label_113
label_112:
label_111:
label_110:
cmp r4, r8
cmp sp, r2
cmp r1, r11
nand r4, r11, r2
lsr r1, r3, 64474
jb label_124
lsr r9, r1, r9
label_124:
add r7, r10, r6
cmp r2, r5
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_129:
nor r4, r12, 28691
je label_129
nand r4, r11, 24993
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_133:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_134:
sub r3, r12, r13
jae label_134
jae label_133
jne label_138
jg label_139
je label_140
jmp label_141
nor r2, r9, r11
label_141:
label_140:
label_139:
label_138:
jmp label_147
cmp r8, r11
label_147:
add r3, r7, sp
sub sp, r2, r4
cmp r13, r13
xor r1, flags, r6
jne label_154
lsr r12, r13, 52775
label_154:
sub sp, r7, 20418
lsl r7, r13, 9876
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_159:
lsr r9, r6, r3
jae label_159
jmp label_162
or r1, sp, r5
label_162:
xor r1, zr, r1
nor r4, r11, 40902
nor r10, zr, r9
jb label_168
ja label_169
jmp label_170
jmp label_171
and r12, zr, 60162
label_171:
label_170:
label_169:
label_168:
or r5, r9, r4
nor r8, r11, r7
sub r2, r12, 945
or r3, r6, 6276
nor r3, r5, 55574
sub r1, r9, 15155
nor r1, flags, 60002
jne label_184
add flags, r1, r4
label_184:
xor r7, r3, r6
lsl r8, r9, r13
or r13, r9, r4
lsl r3, r1, r8
add r9, r4, 35730
lsl flags, r2, 5449
jae label_193
jb label_194
jne label_195
cmp r8, r4
label_195:
label_194:
label_193:
jmp label_200
lsl r6, r5, 8065
label_200:
jae label_203
lsl flags, r12, 33749
label_203:
or r10, sp, r1
add r5, r10, 42102
lsl r2, r1, r2
add sp, r9, r9
xor flags, sp, sp
and r10, r13, r7
sub r3, r4, 20332
or r1, r13, 8225
lsr r6, r12, r2
lsr r10, r13, r12
xor r9, r2, r3
sub sp, r2, r5
lsr r2, r9, r13
nor r2, zr, 45251
jge label_220
jg label_221
jmp label_222
jae label_223
and r11, r5, r1
label_223:
label_222:
label_221:
label_220:
nor sp, r6, 26176
or r10, r13, 7150
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_231:
lsr r10, r1, sp
jge label_231
jl label_234
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_235:
sub r7, r3, 22578
jb label_235
label_234:
or r1, r2, 33347
lsl r9, sp, 53379
or r2, r9, r12
cmp r10, r11
nor r8, r9, r4
lsr flags, r1, 20299
or r1, r4, 64826
add r11, r2, r6
jne label_247
and zr, r8, 64707
label_247:
lsr r4, flags, r3
jmp label_251
nand r11, r7, r5
label_251:
cmp r2, r10
lsl r11, r12, r10
or sp, r5, r10
xor sp, r3, 29296
xor r7, r1, r9
jmp label_259
and r13, zr, 4528
label_259:
cmp flags, r9
jbe label_263
sub r2, r6, 63760
label_263:
xor r1, zr, r12
cmp r12, r5
cmp r13, r6
and r11, flags, sp
jl label_270
jge label_271
add r2, zr, r1
label_271:
label_270:
sub r11, r13, r5
lsl sp, r10, 44479
cmp r6, r1
nand r9, r12, 10146
ja label_279
jmp label_280
add flags, flags, 14465
label_280:
label_279:
cmp r6, r13
lsr r2, sp, r10
jle label_286
lsl r4, r12, 62469
label_286:
jb label_289
xor r5, r3, 42689
label_289:
je label_292
nand r5, sp, 11516
label_292:
nand r12, r4, r6
jmp label_296
and r3, r7, 58755
label_296:
je label_299
jmp label_300
lsr zr, flags, 47353
label_300:
label_299:
cmp r1, sp
add zr, zr, r11
nor r11, r6, r8
lsr sp, r13, r6
or r11, zr, 29038
and r4, r5, 53149
jmp label_310
add r11, r12, r8
label_310:
add r10, sp, r5
lsl r9, r7, 14803
sub flags, r10, 60857
cmp sp, zr
jmp label_317
and flags, r4, r1
label_317:
lsl r1, r6, r5
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_321:
lsr flags, r4, 27586
jne label_321
cmp r2, r13
nor r13, r2, 58914
add r5, zr, 40052
xor r4, r1, r4
sub r6, sp, 43872
jmp label_329
lsr sp, r5, r12
label_329:
lsr r9, zr, r12
lsl r2, r6, 8647
jae label_334
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_335:
jne label_336
nand r11, r12, 2668
label_336:
je label_335
label_334:
and r12, r12, 21797
or r5, r13, r3
jge label_343
nor r13, r7, r10
label_343:
jmp label_346
sub r11, r6, 50202
label_346:
jae label_349
sub r6, r6, 63849
label_349:
or flags, r11, 1822
jmp label_353
ja label_354
jl label_355
and r8, r5, 24623
label_355:
label_354:
label_353:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_360:
sub r9, r10, 46353
jge label_360
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_363:
add flags, r12, 13125
ja label_363
xor r8, flags, 4787
nor r7, r11, r10
nand sp, zr, 39077
add r6, sp, 1864
lsl r5, r1, flags
sub flags, r1, r4
add r10, r2, 48428
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_373:
jl label_374
lsl zr, r6, r6
label_374:
jne label_373
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_378:
lsr r12, r13, 63277
jge label_378
xor r10, r4, r2
xor r9, r1, 58782
lsr flags, r3, r1
and r3, r8, 26098
jmp label_385
and r7, r2, r7
label_385:
lsl r11, sp, 17285
nand r12, sp, r2
cmp r2, sp
jbe label_391
add r1, r1, 35909
label_391:
xor r3, r9, 61316
jg label_395
add r7, r7, r7
label_395:
add zr, r2, r4
sub r3, r4, r2
lsl r12, zr, 50599
jbe label_401
lsl r6, zr, 51723
label_401:
sub sp, r2, 5429
lsl r13, r12, 49359
je label_406
add r1, r12, r7
label_406:
sub r10, r4, 12195
sub sp, r6, 64540
sub r11, r7, 25452
jmp label_412
cmp flags, sp
label_412:
jmp label_415
lsl r11, sp, 18841
label_415:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_418:
xor r5, r10, zr
jle label_418
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_421:
jmp label_422
cmp r4, r12
label_422:
jae label_421
and zr, r8, 45182
lsr r9, r3, 37290
or r8, r11, r13
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_429:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_430:
sub r12, r1, sp
jb label_430
jb label_429
sub flags, r9, 30724
lsl r4, r5, 43005
jle label_436
or r8, r7, 11067
label_436:
and r6, r12, 16962
or r7, r4, 8414
lsl r5, flags, r3
sub r2, r7, 11076
sub r1, r10, r4
add r2, r13, 12900
lsl flags, r8, 32244
nand r2, flags, sp
nand r10, flags, r10
cmp r13, r10
jne label_449
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_450:
lsr r1, r6, 42219
jbe label_450
label_449:
jmp label_454
jmp label_455
add r4, r7, 14313
label_455:
label_454:
jae label_459
nand r3, r7, r13
label_459:
nor r2, r7, r9
add r4, r2, 37750
cmp sp, r10
lsr r10, r9, flags
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_466:
nand zr, r1, r1
jle label_466
nand r6, r9, 46693
or r6, r5, r9
or flags, r7, r10
je label_472
and zr, r13, 6292
label_472:
lsr r8, r10, r11
lsr r11, r7, 48051
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_477:
jne label_478
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_479:
jmp label_480
cmp r11, r10
label_480:
ja label_479
label_478:
je label_477
lsr r8, r7, r8
nor r13, r6, r12
nand r11, flags, 60105
jl label_489
cmp r3, zr
label_489:
xor flags, r4, r5
lsr r7, flags, 27311
sub r9, r10, 9610
jmp label_495
sub r10, r2, 41161
label_495:
nand r8, r11, r6
jg label_499
add r12, r2, r9
label_499:
jb label_502
jge label_503
nor flags, r6, flags
label_503:
label_502:
jne label_507
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_508:
or r10, r13, 14622
jne label_508
label_507:
nand sp, sp, r2
sub sp, flags, 44964
add r12, r1, r1
sub r13, r9, r11
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_516:
or r8, r9, 50777
jae label_516
cmp r6, r9
lsl r3, r7, sp
or sp, r8, 22221
and r12, r6, r8
nor r13, r5, r12
cmp r7, r7
ja label_525
and r4, r10, 62534
label_525:
lsl r13, r12, zr
ja label_529
nor zr, r1, 2705
label_529:
jmp label_532
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_533:
lsr r12, r13, zr
jbe label_533
label_532:
jmp label_537
jmp label_538
sub r13, r6, 29389
label_538:
label_537:
xor r13, r11, 11353
lsl r2, zr, 24834
xor r2, r3, r1
add r12, r6, 58623
jne label_546
nand r3, r7, 19047
label_546:
nand r5, r10, r11
or r4, zr, 39983
lsr sp, r7, r1
or r1, r8, r7
jb label_553
lsl zr, r13, 50768
label_553:
jle label_556
add r12, r1, 21424
label_556:
jmp label_559
and r3, r9, 27505
label_559:
nor r13, r12, r5
or r8, r10, 44764
nand sp, r7, r6
xor sp, r3, r3
nand flags, r13, r12
jg label_567
nand r12, r6, r8
label_567:
nand r5, sp, 11102
sub sp, zr, r11
nand r3, r7, 35329
add r11, r2, 62490
add r13, r4, 62496
or sp, r12, r1
lsr r12, r9, r7
jmp label_577
sub r5, r8, r11
label_577:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_580:
lsr r9, r6, r5
jge label_580
lsl r13, r1, 25210
jb label_584
cmp r12, r7
label_584:
and r7, r13, 13823
jmp label_588
xor r2, r5, r4
label_588:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_591:
lsl zr, zr, r1
jl label_591
xor r9, r2, 38045
jmp label_595
xor r9, r2, 24009
label_595:
or r6, r4, r5
add r10, flags, 37881
cmp r1, sp
and r9, r8, sp
add r4, flags, 53138
or sp, r5, r7
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_604:
jg label_605
nand r12, r8, r3
label_605:
ja label_604
ja label_609
lsr flags, r5, 21007
label_609:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_612:
and zr, r10, 18065
jae label_612
sub r2, r2, 21190
or r10, r1, r13
and flags, flags, 53289
jl label_618
nand r3, flags, 56435
label_618:
xor r1, r6, r8
lsl zr, r8, 64029
and r9, r11, r10
add r4, r12, r8
lsr r1, flags, 36561
jmp label_626
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_627:
sub flags, r4, flags
jb label_627
label_626:
jmp label_631
sub r11, r7, 20471
label_631:
nand r5, flags, r4
nor r6, r8, 23381
cmp zr, r13
lsl r5, r6, 8184
jge label_638
or r3, r2, 41997
label_638:
jg label_641
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_642:
cmp flags, r6
jle label_642
label_641:
and sp, r3, 39129
jbe label_647
jmp label_648
add r13, r6, r13
label_648:
label_647:
xor r9, r4, 64233
and r11, r2, r9
or r2, sp, r3
lsr r1, r11, 25488
cmp r5, r6
xor r3, r7, 38623
nor r12, r9, 46883
xor r8, flags, 54316
or r8, r12, r5
lsl r2, r2, r4
or r2, r6, flags
lsl r13, r13, zr
lsl r11, r2, r1
lsl zr, r7, 52942
nor r3, r1, flags
add r8, r11, r2
xor sp, r11, r13
jne label_669
lsr r6, r2, 31045
label_669:
jg label_672
and r7, r5, zr
label_672:
nor r6, flags, 61000
jle label_676
jl label_677
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_678:
xor r3, r4, r11
jge label_678
label_677:
label_676:
or r1, r8, 54593
lsr r3, r6, sp
and r11, r11, 30010
add r3, r13, 20193
and r4, r10, 6899
or r11, r12, r3
sub r13, r12, r10
xor r11, r3, r7
jmp label_691
sub r11, r8, 40826
label_691:
jmp label_694
cmp sp, r8
label_694:
lsl r12, r8, r12
lsl r3, r12, r9
add r7, r6, r6
lsl r4, zr, 33177
lsl r13, r10, r10
cmp sp, r11
sub r7, zr, r7
add r8, sp, r2
cmp r4, sp
nor flags, r9, r11
jmp label_707
or r8, r2, 11137
label_707:
and r3, r1, r12
sub r5, r2, 182
jae label_712
ja label_713
jmp label_714
add flags, zr, 43399
label_714:
label_713:
label_712:
je label_719
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_720:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_721:
sub r8, r9, r5
jl label_721
jmp label_720
label_719:
lsl r11, r7, 18011
or r11, flags, 17232
lsr r8, r12, r1
jge label_729
jle label_730
and r2, r7, r6
label_730:
label_729:
xor r2, r9, 12074
or r1, r6, r8
jmp label_736
sub r13, r1, 31419
label_736:
lsl r6, r5, 36093
nand r11, r9, 14684
lsr r6, r5, 21478
or r1, r4, 57454
jle label_743
sub r6, r4, 18858
label_743:
jl label_746
cmp r3, r4
label_746:
cmp r10, r6
jl label_750
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_751:
jbe label_752
add sp, r4, r11
label_752:
jle label_751
label_750:
jne label_757
and r2, r10, 46839
label_757:
lsl r12, r13, 52739
jbe label_761
and r3, zr, r10
label_761:
nand r1, zr, 32487
lsr r11, sp, 5059
nand r2, r2, 65300
xor r1, r1, 27053
and r7, r10, r7
jge label_769
jg label_770
and sp, r3, r12
label_770:
label_769:
jmp label_774
lsl r11, r4, r3
label_774:
or r3, r2, zr
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_778:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_779:
nor r11, r8, r10
jb label_779
jge label_778
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_783:
jg label_784
nand r11, sp, r1
label_784:
jb label_783
lsr sp, sp, 20128
nor r12, r2, r6
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_790:
and r9, r8, 9712
jge label_790
lsr r1, r11, 19829
lsl r9, r3, r5
nor r4, r12, r5
lsl r3, r2, r6
lsr r12, r1, 49369
jbe label_798
jl label_799
add r13, r8, r8
label_799:
label_798:
or r7, r3, 36514
add r5, r4, sp
xor flags, flags, 43788
nor r9, flags, r13
ja label_807
or r3, r2, 3942
label_807:
nor r9, r2, 48440
lsr r11, r13, r10
cmp sp, r2
or r6, r10, 23820
nand r3, r5, r10
sub r1, r7, r3
jmp label_816
cmp r3, r9
label_816:
and r6, r1, r11
and r9, r2, r4
nand r5, r1, r2
lsr r11, r3, 19278
jb label_823
lsr flags, zr, 59857
label_823:
jae label_826
nor zr, r1, 20804
label_826:
add r6, r4, 17937
lsl r12, r9, r11
nand r11, r1, r5
or r4, r3, r6
xor flags, zr, 41497
nand r12, r1, r13
sub r6, r8, r5
sub r10, r8, r9
sub r12, r13, r13
lsl r1, r2, 12466
nand r10, r7, r5
or r7, r11, r13
or r10, r11, r4
add r13, r6, 42659
nor r12, r8, r3
sub r11, r12, r11
sub r5, sp, r9
jle label_846
jmp label_847
sub r13, r10, r8
label_847:
label_846:
lsr r11, r1, 28749
sub sp, r2, r2
lsr r5, r4, 18140
lsl r4, r12, 60895
lsl r11, sp, 47188
cmp r4, r7
xor r3, r3, 56773
jmp label_858
and r12, r5, 34263
label_858:
add r12, r13, 44654
add r12, r10, 27672
nor r11, r13, 52639
nor r12, r4, 24870
or r13, r13, 18677
nand r2, r4, r9
ja label_867
nor r12, r8, 15
label_867:
lsl r13, r7, r4
lsr r1, sp, 11630
lsr r12, r1, r1
nand zr, r12, r3
or flags, r11, r9
jg label_875
or r6, sp, flags
label_875:
cmp r9, r9
add sp, r3, 13739
lsl r3, r7, r4
add r6, flags, r13
xor r8, r9, 60964
or r13, zr, 2835
lsl r12, r9, 35712
nand r13, zr, r8
jmp label_886
or r3, flags, r8
label_886:
jmp label_889
sub r12, r3, 60596
label_889:
nand r12, r7, 206
sub r8, r3, 53253
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_894:
add r2, r9, 55904
jne label_894
xor r8, zr, 53624
nor zr, r6, r7
jge label_899
jmp label_900
nand r13, r1, r7
label_900:
label_899:
or r10, zr, r3
xor r3, r5, r5
jl label_906
lsr r10, r9, 14580
label_906:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_909:
ja label_910
xor r3, r4, r10
label_910:
jne label_909
lsl r4, flags, r7
nor r9, r2, r7
and flags, r4, 8746
or flags, r6, r12
add r2, r6, sp
lsl flags, sp, 11055
add r7, r12, 42272
and r11, r7, 37228
jmp label_922
xor r8, r6, 39889
label_922:
lsr r8, r9, 5236
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_926:
nor r9, r9, r13
jmp label_926
nand r7, r11, 31943
nand r4, r5, 21628
cmp r13, sp
or sp, r9, 13612
jmp label_933
lsl r13, r11, 58944
label_933:
jae label_936
add r5, r3, r8
label_936:
xor r1, r11, 9161
add sp, r9, r11
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_941:
lsl r8, r8, r13
jmp label_941
sub r11, r2, r10
or r3, r13, r10
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_946:
nand r9, r8, r8
je label_946
xor zr, flags, 775
lsl flags, r5, 43128
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_951:
lsl r13, r1, r8
jne label_951
nand r4, r13, 47957
jmp label_955
nand r2, r2, 4308
label_955:
add r8, r6, 24430
nor sp, flags, 38606
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_960:
or r10, r4, flags
jl label_960
xor zr, r6, 54865
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_964:
add r8, r10, r6
jbe label_964
jmp label_967
nand r9, r2, flags
label_967:
je label_970
or zr, r2, r1
label_970:
nor r1, r10, 64953
jmp label_974
lsl flags, r13, r5
label_974:
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_977:
or r12, r12, r4
jge label_977
xor r11, flags, flags
or r1, zr, 0
or r2, zr, 1
cmp r1, r2
label_981:
cmp r6, r8
jge label_981
nor r1, r1, 15675
nand r2, r13, r5
add r11, r10, r1
jle label_987
and r5, r1, r6
label_987:
sub r11, r8, 25556
nor r7, r7, 34074
lsr r8, r8, r3
or r9, r12, 38805
or r8, r6, r6
sub r13, r3, r1
and r1, r5, 50761
xor r11, r11, 10247
jmp label_998
xor r13, r8, 34085
label_998:
`